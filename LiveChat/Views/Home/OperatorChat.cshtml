@using System.Threading;
@using Models.ChatModels;
@{
    ViewBag.Title = "OperatorChat";
}
<h2>OperatorChat</h2>
<input id="displayname" type="hidden" />
<div>
    <h7>Group</h7>
    <input id="displaygroup" />
</div>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <div style="overflow-x:auto;">
        <table cellspacing="0" cellpadding="5" id="ChatsTable">
            <tr>
              
            </tr>
        </table>
    </div>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            //RECEIVE
            chat.client.addNewMessageToPage = function (name, group, message) {
                console.log("message: " + name + " " + group + " " + message);
                // Add the message to the page.
                $('#discussion' + group).append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };

            chat.client.registerUserInRoom = function (group) {
                console.log("Room " + group + " added");
                var myform = $('#ChatsTable');
                myform.find('tr').each(function () {
                    var trow = $(this);
                    //var len = document.getElementById('ChatsTable').rows[0].cells.length;
                    trow.append('<td id= "group'+group+'" width="100" valign="top"><ul id="discussion' + group + '"><h1>room' + group + '</h1></ul></td>');
                });
            }

            chat.client.closeGroup = function (group) {
                console.log("Room " + group + " removed");
                document.getElementById("group" + group).remove();
            }

            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //$('#displaygroup').val(prompt('Enter groups names (separated with coma):', ''))
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    //SEND
                    chat.server.send($('#displaygroup').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

                //$('#registeruser').click(function () {
                //    // Call the Send method on the hub.
                //    chat.server.registerOperator($('#displayname').val(), $('#displaygroup').val());
                //    // Clear text box and reset focus for next comment.
                //    $('#message').focus();
                //});
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
